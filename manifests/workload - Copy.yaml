---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: sample-php
    app: kubeapp
    env: local
  name: sample-php-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sample-php
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sample-php
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - kubeapp
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: sample-php
        image: lightbulb233/php7.4.33-apache
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 2
          successThreshold: 2
          timeoutSeconds: 2
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 180
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 2
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"
---
apiVersion: v1
kind: Service
metadata:
  name: sample-php-svc
  labels:
    app.kubernetes.io/name: sample-php
spec:
  selector:
    app.kubernetes.io/name: sample-php
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: sample-php-ingress
spec:
  rules:
  - host: "sample-php.mcdcgroup.com"
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: sample-php-svc
            port:
              number: 8080

